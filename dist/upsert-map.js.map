{"version":3,"file":"upsert-map.js","sources":["../src/index.mjs"],"sourcesContent":["/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isFunction(value) {\n  if (Object.prototype.toString.call(value) !== \"[object Function]\") {\n    return false;\n  }\n  return !/^class\\s/.test(Function.prototype.toString.call(value));\n}\n\nclass UpsertMap extends Map {\n  /**\n   * @name upsert\n   * @description Returns the value for key if already exists, otherwise it is created and inserted into the map.\n   * @param {*} key - Key that you want to use.\n   * @param {Function=} updateFunction - Function you want to operate on the existing value, if found.\n   * @param {Function=} insertFunction - Function you want to operate if the key does not currently exist.\n   * @returns {*}\n   * @throws TypeError\n   */\n  upsert(key, updateFunction, insertFunction) {\n    let insertFunc;\n    if (arguments.length > 2) {\n      insertFunc = insertFunction;\n    } else {\n      insertFunc = undefined;\n    }\n    let value;\n    const isUpdateable = isFunction(updateFunction);\n    const isInsertable = isFunction(insertFunc);\n    if (!isUpdateable && !isInsertable) {\n      throw TypeError(\"At least one callback required\");\n    }\n    if (this.has(key)) {\n      value = this.get(key);\n      if (isUpdateable) {\n        value = updateFunction(value);\n        this.set(key, value);\n      }\n    } else if (isInsertable) {\n      value = insertFunc();\n      this.set(key, value);\n    }\n    return value;\n  }\n}\n\nexport { UpsertMap };\n"],"names":["isFunction","value","Object","prototype","toString","call","test","Function","UpsertMap","Map","upsert","key","updateFunction","insertFunction","insertFunc","arguments","length","undefined","isUpdateable","isInsertable","TypeError","this","has","get","set"],"mappings":"2MAIA,SAASA,WAAWC,SAC4B,sBAA1CC,OAAOC,UAAUC,SAASC,KAAKJ,KAG3B,WAAWK,KAAKC,SAASJ,UAAUC,SAASC,KAAKJ,IAG3D,MAAMO,kBAAkBC,IAUtBC,OAAOC,EAAKC,EAAgBC,OACtBC,EAMAb,EAJFa,EADEC,UAAUC,OAAS,EACRH,OAEAI,QAGTC,EAAelB,WAAWY,GAC1BO,EAAenB,WAAWc,OAC3BI,IAAiBC,QACdC,UAAU,yCAEdC,KAAKC,IAAIX,IACXV,EAAQoB,KAAKE,IAAIZ,GACbO,IACFjB,EAAQW,EAAeX,QAClBuB,IAAIb,EAAKV,KAEPkB,IACTlB,EAAQa,SACHU,IAAIb,EAAKV,IAETA"}